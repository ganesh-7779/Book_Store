{
  "swagger": "2.0",
  "definitions": {
    "Registration_info": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First Name of user."
        },
        "lastName": {
          "type": "string",
          "description": "First Name of user."
        },
        "email": {
          "type": "string",
          "description": "Email ID of user."
        },
        "password": {
          "type": "string",
          "description": "Password of user."
        }
      },
      "example": {
        "firstName": "Akash",
        "lastName": "Pawar",
        "email": "akashpawar6@gmail.com",
        "password": "akashG2@7"
      }
    },
    "logininfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email ID of user."
        },
        "password": {
          "type": "string",
          "description": "Password of user."
        }
      },
      "example": {
        "email": "akashpawd4@gmail.com",
        "password": "akashf8@7"
      }
    },
    "Book": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of book"
        },
        "description": {
          "type": "string",
          "description": "description of book"
        },
        "author": {
          "type": "string",
          "description": "book author name"
        },
        "category": {
          "type": "string",
          "description": "category of book"
        },
        "price": {
          "type": "Number",
          "description": "Price of book"
        }
      },
      "example": {
        "name": " name",
        "category": "category",
        "description": "description",
        "author": "author",
        "price": "45"
      }
    },
    "cart": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "Id of book to Add in Cart"
        },
        "userId": {
          "type": "string",
          "description": "User To find out The Cart"
        },
        "quantity": {
          "type": "Number",
          "description": "Quantity Of book To added in Cart"
        }
      },
      "example": {
        "itemId": "98",
        "userId": "87",
        "quantity": "2"
      }
    },
    "searchBook": {
      "type": "object",
      "properties": {
        "nameNcategory": {
          "type": "string",
          "description": "Enter category or name of book"
        }
      },
      "example": {
        "nameNcategory": "story"
      }
    }
  },
    "info": {
      "version": "1.0.0",
      "title": "Book Store App",
      "description": "Simple book store app which allow admin to perform CRUD and customers to buy product.",
      "license": {
        "name": "ISC License",
        "url": "https://opensource.org/licenses/ISC"
      }
    },
    "host": "localhost:8000",
    "tags": [
      {
        "name": "Book Store",
        "description": "API for book store App"
      }
    ],
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
      "/admin-register": {
        "post": {
          "tags": ["Admin Registration"],
          "description": "Create a new admin in the BOOK STORE App",
          "parameters": [
            {
              "name": "Admin Registration",
              "in": "body",
              "description": "Admin that we wants to create",
              "schema": {
                "$ref": "#/definitions/Registration_info"
              }
            }
          ],
          "produces": ["application/json"],
          "schema": {
            "$ref": "#/definitions/Registration_info"
          },
          "responses": {
            "201": {
              "description": "Admin Registration successfully"
            },
            "409": {
              "description": "user/email already exist or please enter valid details"
            },
            "422": {
              "description": "Wrong user input"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/user-register": {
        "post": {
          "tags": ["User Registration"],
          "description": "Create a new user in the BOOK STORE App",
          "parameters": [
            {
              "name": "User Registration",
              "in": "body",
              "description": "User that we wants to create",
              "schema": {
                "$ref": "#/definitions/Registration_info"
              }
            }
          ],
          "produces": ["application/json"],
          "schema": {
            "$ref": "#/definitions/Registration_info"
          },
          "responses": {
            "201": {
              "description": "User Registration successfully"
            },
            "409": {
              "description": "user/email already exist or please enter valid details"
            },
            "422": {
              "description": "Wrong user input"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "tags": ["Login"],
          "description": "Already registered ? Then login using email and password",
          "parameters": [
            {
              "name": "Login",
              "in": "body",
              "description": "login here with login info ",
              "schema": {
                "$ref": "#/definitions/logininfo"
              }
            }
          ],
          "produces": ["application/json"],
          "schema": {
            "$ref": "#/definitions/logininfo"
          },
          "responses": {
            "201": {
              "description": "logged in successfullyü§©ü§û"
            },
            "401": {
              "description": "Unable to login. Please enter correct login infoüòí"
            },
            "422": {
              "description": "Wrong user input"
            },
            "500": {
              "description": "Internal server errorüåç"
            }
          }
        }
      },
      "/createBook": {
        "post": {
          "tags": ["Create Book"],
          "description": "Create Book !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for validation",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "name": "create Book",
              "in": "body",
              "description": "Book's body",
              "schema": {
                "$ref": "#/definitions/Book"
              }
            }
          ],
          "produces": ["application/json"],
          "schema": {
            "$ref": "#/definitions/Book"
          },
          "responses": {
            "201": {
              "description": "Book Created Succesfully ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "401": {
              "description": "failed to post Productüòí"
            },
            "500": {
              "description": "Internal server errorüåç"
            }
          }
        }
      },
      "/deleteBook/{Id}": {
        "delete": {
          "tags": ["Delete Book By ID"],
          "description": "You will able to delete your Book !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "in": "path",
              "name": "Id",
              "description": "Enter ID of Book to delete",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Book successfully Deleted ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundü§™"
            },
            "500": {
              "description": "Some error occurred üåç"
            }
          }
        }
      },
      "/getAllBook": {
        "get": {
          "tags": ["Get All Book"],
          "description": "You will get your all Book !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Its Your All Book ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundüòí"
            },
            "500": {
              "description": "Some internal error occurred üåç"
            }
          }
        }
      },
      "/getBookBy/{Id}": {
        "get": {
          "tags": ["Get Book By ID"],
          "description": "You will able to Get your Book By Id!!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "in": "path",
              "name": "Id",
              "description": "Enter ID of Book to Get",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Its Your Book ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundüòí"
            },
            "500": {
              "description": "Some error occurred üåç"
            }
          }
        }
      },
      "/updateBook/{Id}": {
        "put": {
          "tags": ["Update Book"],
          "description": "Update Book !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for validation",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "name": "Update Book",
              "in": "body",
              "description": "Book's body",
              "schema": {
                "$ref": "#/definitions/Book"
              }
            },
            {
              "in": "path",
              "name": "Id",
              "description": "Enter ID of Book to Update",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],
          "schema": {
            "$ref": "#/definitions/Book"
          },
          "responses": {
            "201": {
              "description": "Book Updated Successfullyü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundüòí"
            },
            "500": {
              "description": "Internal server errorüåç"
            }
          }
        }
      },
      "/searchBook": {
        "post": {
          "tags": ["Search Book"],
          "description": "You will get your Searched Book !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "name": "Search Book",
              "in": "body",
              "description": "Book's body",
              "schema": {
                "$ref": "#/definitions/searchBook"
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Its Your All Book ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundüòí"
            },
            "500": {
              "description": "Some internal error occurred üåç"
            }
          }
        }
      },
      "/addToCart": {
        "post": {
          "tags": ["Add Book To Cart"],
          "description": "Add To Cart !",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for validation",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "name": "Add To Book",
              "in": "body",
              "description": "BookId body",
              "schema": {
                "$ref": "#/definitions/cart"
              }
            }
          ],
          "produces": ["application/json"],
          "schema": {
            "$ref": "#/definitions/cart"
          },
          "responses": {
            "200": {
              "description": "Add to Cart successfully!ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "401": {
              "description": "Invalid request,Please enter valid info üòí"
            },
            "500": {
              "description": "Internal server errorüåç"
            }
          }
        }
      },
      "/removeFromCart/{Id}": {
        "delete": {
          "tags": ["Remove Book From Cart"],
          "description": "Remove Book By ID From Cart!!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            },
            {
              "in": "path",
              "name": "Id",
              "description": "Enter ID of Book to Remove From Cart",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Book Removed successfully, Now Available Book In Cart!ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not found or Cart Not Foundüòí"
            },
            "500": {
              "description": "Some error occurred üåç"
            }
          }
        }
      },
      "/viewCartItem": {
        "get": {
          "tags": ["View All Book From Cart"],
          "description": "user able to see all book of cart",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Its your Cart Item!ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Cart Not Foundüòí"
            },
            "500": {
              "description": "Some error occurred üåç"
            }
          }
        }
      },
      "/lowTOHighPrice": {
        "get": {
          "tags": ["Get All Book With Low To High Price"],
          "description": "You will get your all Book With Low to High Price !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Its Your All Book With Low To High Price ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundüòí"
            },
            "500": {
              "description": "Some internal error occurred üåç"
            }
          }
        }
      },
      "/highToLowPrice": {
        "get": {
          "tags": ["Get All Book With High To Low Price"],
          "description": "You will get your all Book With High to Low Price !!",
          "parameters": [
            {
              "in": "header",
              "name": "Authorization",
              "description": "Token for vaidation..! Please Enter a string before puting token..!",
              "schema": {
                "type": "string",
                "required": true
              }
            }
          ],
          "produces": ["application/json"],

          "responses": {
            "200": {
              "description": "Its Your All Book With High To Low Price ü§ûüòâ!!"
            },
            "400": {
              "description": "Please enter Valid Tokenü§™"
            },
            "404": {
              "description": "Book not foundüòí"
            },
            "500": {
              "description": "Some internal error occurred üåç"
            }
          }
        }
      }
    }
  }

